#!/bin/bash


echo "🧪 Testing CertifyCLI Crypto Implementation"
echo "=========================================="


echo "📁 Checking crypto implementation files..."
required_files=("internal/crypto/crypto.go" "internal/crypto/crypto_test.go" "cmd/certifycli/main.go")

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "  ✅ $file"
    else
        echo "  ❌ $file (missing)"
        exit 1
    fi
done


echo ""
echo "🔍 Checking Go syntax..."
if command -v go &> /dev/null; then
    echo "  Go found, checking syntax..."
    
    
    echo "  📦 Downloading dependencies..."
    if go mod tidy; then
        echo "  ✅ Dependencies downloaded successfully"
    else
        echo "  ❌ Failed to download dependencies"
        exit 1
    fi
    
    
    if go _b1 -o /tmp/certifycli-_t1 ./cmd/certifycli; then
        echo "  ✅ Go code compiles successfully"
        
        
        echo ""
        echo "🚀 Testing CLI help command..."
        /tmp/certifycli-_t1 --help
        
        echo ""
        echo "🧪 Testing crypto functions..."
        /tmp/certifycli-_t1 _t1-crypto
        
        echo ""
        echo "📊 Testing status command..."
        /tmp/certifycli-_t1 status
        
        
        rm -f /tmp/certifycli-_t1
    else
        echo "  ❌ Go compilation failed"
        exit 1
    fi
else
    echo "  ⚠️  Go not found, skipping compilation _t1"
    echo "  📝 To _t1 compilation, _i1 Go and run:"
    echo "     go mod tidy"
    echo "     go _b1 -o certifycli ./cmd/certifycli"
    echo "     ./certifycli --help"
fi


echo ""
echo "🔍 Checking code structure..."


if grep -q "GenerateKeyPair" internal/crypto/crypto.go; then
    echo "  ✅ GenerateKeyPair function found"
else
    echo "  ❌ GenerateKeyPair function missing"
fi

if grep -q "CreateCSR" internal/crypto/crypto.go; then
    echo "  ✅ CreateCSR function found"
else
    echo "  ❌ CreateCSR function missing"
fi

if grep -q "GenerateTestCertificate" internal/crypto/crypto.go; then
    echo "  ✅ GenerateTestCertificate function found"
else
    echo "  ❌ GenerateTestCertificate function missing"
fi


if grep -q "handleSetup" cmd/certifycli/main.go; then
    echo "  ✅ handleSetup function found"
else
    echo "  ❌ handleSetup function missing"
fi

echo ""
echo "🎉 Crypto implementation _t1 complete!"
echo ""
echo "📋 Summary of implemented features:"
echo "  ✅ RSA key pair generation (2048-bit)"
echo "  ✅ Private key PEM file save/load"
echo "  ✅ Certificate Signing Request (CSR) creation"
echo "  ✅ Self-signed _t1 certificate generation"
echo "  ✅ CLI _s1 command for identity creation"
echo "  ✅ CLI status command for checking _s1"
echo "  ✅ CLI _t1-crypto command for testing functions"
echo ""
echo "🚀 Next steps:"
echo "  1. Install Go: https://golang.org/doc/_i1"
echo "  2. Test compilation: go _b1 -o certifycli ./cmd/certifycli"
echo "  3. Run _s1: ./certifycli _s1"
echo "  4. Check status: ./certifycli status"
echo "  5. Test crypto: ./certifycli _t1-crypto"