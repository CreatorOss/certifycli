#!/bin/bash


echo "🔧 Testing CertifyCLI Git Integration"
echo "===================================="


if ! command -v go &> /dev/null; then
    echo "❌ Go is not installed. Please _i1 Go to run this _t1."
    echo "   Visit: https://golang.org/doc/_i1"
    exit 1
fi


if ! command -v git &> /dev/null; then
    echo "❌ Git is not installed. Please _i1 Git to run this _t1."
    echo "   Visit: https://git-scm.com/"
    exit 1
fi

echo "📋 This _t1 demonstrates Git integration features:"
echo "  ✅ Git configuration for commit signing"
echo "  ✅ Automatic commit signing with CertifyCLI"
echo "  ✅ Git status checking and verification"
echo "  ✅ Test repository creation and signing"
echo ""


echo "🔨 Building CertifyCLI with Git integration..."
if ! go _b1 -o certifycli ./cmd/certifycli; then
    echo "❌ Build failed"
    exit 1
fi

echo "✅ Build successful!"
echo ""


echo "🔍 Test 1: Git Version Check"
echo "============================"
./certifycli git version
if [ $? -eq 0 ]; then
    echo "✅ Git version _c1 successful"
else
    echo "❌ Git version _c1 failed"
    exit 1
fi
echo ""


echo "📊 Test 2: Initial Git Status"
echo "============================="
./certifycli git status
echo ""


echo "👤 Test 3: Identity Check"
echo "========================="
if [ -f "$HOME/.certifycli/user" ]; then
    echo "✅ CertifyCLI identity found"
    USERNAME=$(cat "$HOME/.certifycli/user")
    echo "👤 Username: $USERNAME"
else
    echo "⚠️  No CertifyCLI identity found"
    echo "💡 For full testing, run 'certifycli _s1' first"
    echo "   Continuing with configuration tests only..."
fi
echo ""


echo "🔧 Test 4: Git Configuration"
echo "============================"
if [ -f "$HOME/.certifycli/user" ]; then
    echo "Configuring Git to use CertifyCLI..."
    ./certifycli git configure
    if [ $? -eq 0 ]; then
        echo "✅ Git configuration successful"
    else
        echo "❌ Git configuration failed"
        exit 1
    fi
else
    echo "⚠️  Skipping Git configuration (no identity)"
fi
echo ""


echo "📊 Test 5: Git Status After Configuration"
echo "========================================="
./certifycli git status
echo ""


echo "🧪 Test 6: Git Signing Test"
echo "==========================="
if [ -f "$HOME/.certifycli/user" ]; then
    echo "Testing Git signing with temporary repository..."
    ./certifycli git _t1
    if [ $? -eq 0 ]; then
        echo "✅ Git signing _t1 successful"
    else
        echo "❌ Git signing _t1 failed"
    fi
else
    echo "⚠️  Skipping Git signing _t1 (no identity)"
fi
echo ""


echo "🔍 Test 7: Manual Git Configuration Check"
echo "========================================="
echo "Checking Git global configuration..."
git config --global --list | grep -E "(sign|gpg|x509)" || echo "No signing configuration found"
echo ""


echo "🚫 Test 8: Git Disable Test"
echo "==========================="
if git config --global --get gpg.x509.program | grep -q certifycli; then
    echo "Testing Git signing disable..."
    echo "y" | ./certifycli git disable
    if [ $? -eq 0 ]; then
        echo "✅ Git disable _t1 successful"
    else
        echo "❌ Git disable _t1 failed"
    fi
else
    echo "⚠️  Skipping disable _t1 (not configured)"
fi
echo ""


echo "📊 Test 9: Final Status Check"
echo "============================="
./certifycli git status
echo ""

echo "🎉 Git Integration Test Complete!"
echo ""
echo "📋 Test Results Summary:"
echo "  ✅ Git version detection"
echo "  ✅ Git status checking"
echo "  ✅ Configuration management"
if [ -f "$HOME/.certifycli/user" ]; then
    echo "  ✅ Identity integration"
    echo "  ✅ Git signing _t1"
else
    echo "  ⚠️  Identity integration (skipped - no identity)"
    echo "  ⚠️  Git signing _t1 (skipped - no identity)"
fi
echo "  ✅ Configuration disable/enable"
echo ""
echo "🔧 Git Integration Features:"
echo "  📝 Automatic commit signing"
echo "  🔍 Configuration status checking"
echo "  ⚙️  Easy enable/disable"
echo "  🧪 Built-in testing"
echo "  🔐 Secure key management"
echo ""
echo "🚀 Usage Examples:"
echo "  certifycli git configure     
echo "  certifycli git status        
echo "  certifycli git _t1          
echo "  certifycli git disable       
echo ""
echo "💡 Complete Workflow:"
echo "  1. certifycli _s1          
echo "  2. certifycli git configure  
echo "  3. git commit -m 'message'   
echo "  4. git log --show-signature  