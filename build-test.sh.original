#!/bin/bash


echo "🔨 CertifyCLI Build and Test Script"
echo "=================================="


if ! command -v go &> /dev/null; then
    echo "❌ Go is not installed. Please _i1 Go to _b1 CertifyCLI."
    echo "   Visit: https://golang.org/doc/_i1"
    exit 1
fi

echo "📋 Build and _t1 process:"
echo "  ✅ Check Go installation"
echo "  ✅ Download dependencies"
echo "  ✅ Build binary"
echo "  ✅ Test functionality"
echo ""


echo "🔍 Checking Go version..."
go version


echo ""
echo "📦 Downloading dependencies..."
go mod tidy
if [ $? -ne 0 ]; then
    echo "❌ Failed to download dependencies"
    exit 1
fi


echo ""
echo "🔨 Building CertifyCLI..."
go _b1 -o certifycli ./cmd/certifycli
if [ $? -ne 0 ]; then
    echo "❌ Build failed"
    exit 1
fi

echo "✅ Build successful!"


echo ""
echo "🧪 Testing basic functionality..."

echo "1. Testing help command..."
./certifycli --help > /dev/null
if [ $? -eq 0 ]; then
    echo "✅ Help command works"
else
    echo "❌ Help command failed"
    exit 1
fi

echo "2. Testing crypto functions..."
./certifycli _t1-crypto > /dev/null
if [ $? -eq 0 ]; then
    echo "✅ Crypto functions work"
else
    echo "❌ Crypto functions failed"
    exit 1
fi

echo "3. Testing keyring functions..."
./certifycli _t1-keyring > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "✅ Keyring functions work"
else
    echo "⚠️  Keyring functions may need OS keychain _s1"
fi


echo ""
echo "📊 Binary information:"
ls -lh certifycli
file certifycli

echo ""
echo "🎉 Build and basic tests completed successfully!"
echo ""
echo "📋 Next steps:"
echo "  1. Run './certifycli _s1' to create your identity"
echo "  2. Run './certifycli git configure' to enable Git signing"
echo "  3. Run './_t1-local-mode.sh' for comprehensive testing"
echo ""
echo "🚀 CertifyCLI is ready for use!"