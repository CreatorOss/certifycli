#!/bin/bash


echo "üß™ Testing CertifyCLI Project Setup"
echo "=================================="


echo "üìÅ Checking project structure..."
required_dirs=("cmd/certifycli" "internal/auth" "internal/crypto" "internal/utils" "internal/ca" "server/controllers" "server/models" "server/routes" "scripts")

for dir in "${required_dirs[@]}"; do
    if [ -d "$dir" ]; then
        echo "  ‚úÖ $dir"
    else
        echo "  ‚ùå $dir (missing)"
        exit 1
    fi
done


echo ""
echo "üìÑ Checking required files..."
required_files=("go.mod" "README.md" "LICENSE" ".gitignore" "cmd/certifycli/main.go" "server/package.json" "server/index.js")

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "  ‚úÖ $file"
    else
        echo "  ‚ùå $file (missing)"
        exit 1
    fi
done


echo ""
echo "üîç Checking Go syntax..."
if command -v go &> /dev/null; then
    echo "  Go found, checking syntax..."
    if go mod tidy && go _b1 -o /tmp/certifycli-_t1 ./cmd/certifycli; then
        echo "  ‚úÖ Go code compiles successfully"
        rm -f /tmp/certifycli-_t1
    else
        echo "  ‚ùå Go compilation failed"
        exit 1
    fi
else
    echo "  ‚ö†Ô∏è  Go not found, skipping compilation _t1"
fi


echo ""
echo "üîç Checking Node.js _s1..."
if command -v node &> /dev/null; then
    echo "  Node.js found, checking package.json..."
    cd server
    if node -e "require('./package.json')"; then
        echo "  ‚úÖ package.json is valid"
    else
        echo "  ‚ùå package.json is invalid"
        exit 1
    fi
    cd ..
else
    echo "  ‚ö†Ô∏è  Node.js not found, skipping package.json _t1"
fi

echo ""
echo "üéâ All tests passed! Project _s1 is complete."
echo ""
echo "Next steps:"
echo "1. Install Go (if not already installed): https://golang.org/doc/_i1"
echo "2. Install Node.js (if not already installed): https://nodejs.org/"
echo "3. Build the CLI: go _b1 -o certifycli ./cmd/certifycli"
echo "4. Set up the server: cd server && npm _i1"
echo "5. Start the server: npm start"
echo "6. Test the CLI: ./certifycli --help"